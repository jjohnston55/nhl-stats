{"version":3,"sources":["actions/viewActions.js","api/index.js","components/pages/home/index.jsx","components/pages/team/index.jsx","components/pages/player/index.jsx","App.js","serviceWorker.js","reducers/viewReducer.js","reducers/index.js","configureStore.js","index.js"],"names":["changeView","view","data","type","payload","name","ENDPOINT","NHL","attrs","Object","assign","this","prototype","GetTeams","cancelToken","axios","get","then","response","teams","catch","err","console","error","GetTeamStats","teamID","stats","GetTeamRoster","roster","GetPlayer","playerID","people","GetPlayerStats","statType","Home","props","dispatch","useDispatch","CancelToken","source","api","useState","pacificTeams","setPacificTeams","centralTeams","setCentralTeams","metroTeams","setMetroTeams","atlanticTeams","setAtlanticTeams","useEffect","token","pTeams","cTeams","mTeams","aTeams","forEach","team","division","abbreviation","push","cancel","handleTeam","log","viewActions","gutter","span","className","message","map","idx","key","onClick","size","block","Team","time","Date","teamStats","setTeamStats","teamRanks","setTeamRanks","leftWing","setLeftWing","centers","setCenters","rightWings","setRightWings","defence","setDefence","goalies","setGoalies","l","c","r","d","g","id","player","position","code","splits","stat","handlePlayer","person","justify","locationName","teamName","firstYearOfPlay","href","officialSiteUrl","rel","target","venue","toLocaleTimeString","timeZone","gamesPlayed","accordion","Panel","header","fullName","wins","losses","pts","faceOffWinPercentage","shotsAllowed","shotsPerGame","Player","setPlayer","setPosition","setTeam","setStats","ranks","setRanks","season","setSeason","primaryPosition","currentTeam","playerStats","length","playerRanks","bordered","title","layout","Item","label","primaryNumber","nationality","birthStateProvince","birthCity","birthDate","currentAge","height","weight","shootsCatches","keys","toString","timeOnIce","games","shotsAgainst","goalsAgainst","goalsAgainstAverage","goalAgainstAverage","shutOuts","shutouts","saves","savePercentage","rankPoints","points","rankShotPct","shotPct","rankShots","shots","rankGoals","goals","rankAssists","assists","rankPowerPlayGoals","powerPlayGoals","powerPlayPoints","faceOffPct","App","content","setContent","useSelector","state","page","shape","icon","LeftOutlined","Boolean","window","location","hostname","match","initialState","history","viewReducer","action","pop","rootReducers","combineReducers","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d444a71b.chunk.js","sourcesContent":["export const BACK_VIEW = 'backView';\r\nexport const CHANGE_VIEW = 'changeView';\r\nexport const FORWARD_VIEW = 'forwardView';\r\n\r\nexport const backView = () => {\r\n    return {\r\n        type: BACK_VIEW\r\n    }\r\n};\r\n\r\nexport const changeView = (view, data = {}) => {\r\n    return {\r\n        type: CHANGE_VIEW,\r\n        payload: {\r\n            name: view,\r\n            data\r\n        }\r\n    }\r\n};","import axios from 'axios';\r\n\r\n// https://gitlab.com/dword4/nhlapi/-/blob/master/stats-api.md\r\nconst ENDPOINT = 'https://statsapi.web.nhl.com/api/v1';\r\n\r\nconst NHL = function(attrs) {\r\n    if (attrs) {\r\n        Object.assign(this, attrs);\r\n    }\r\n};\r\n\r\nNHL.prototype.GetTeams = function(cancelToken) {\r\n    return axios.get(`${ENDPOINT}/teams`, {\r\n        cancelToken: cancelToken\r\n    }).then(response => {\r\n        return response.data.teams;\r\n    }).catch(err => console.error(err));\r\n}\r\n\r\nNHL.prototype.GetTeamStats = function(teamID, cancelToken) {\r\n    return axios.get(`${ENDPOINT}/teams/${teamID}/stats`, {\r\n        cancelToken: cancelToken\r\n    }).then(response => {\r\n        return response.data.stats;\r\n    }).catch(err => console.error(err));\r\n}\r\n\r\nNHL.prototype.GetTeamRoster = function(teamID, cancelToken) {\r\n    return axios.get(`${ENDPOINT}/teams/${teamID}/roster`, {\r\n        cancelToken: cancelToken\r\n    }).then(response => {\r\n        return response.data.roster;\r\n    }).catch(err => console.error(err));\r\n}\r\n\r\nNHL.prototype.GetPlayer = function(playerID, cancelToken) {\r\n    return axios.get(`${ENDPOINT}/people/${playerID}`, {\r\n        cancelToken: cancelToken\r\n    }).then(response => {\r\n        return response.data.people[0];\r\n    }).catch(err => console.error(err));\r\n}\r\n\r\nNHL.prototype.GetPlayerStats = function(playerID, cancelToken, statType = 'statsSingleSeason') {\r\n    return axios.get(`${ENDPOINT}/people/${playerID}/stats?stats=${statType}`, {\r\n        cancelToken: cancelToken\r\n    }).then(response => {\r\n        return response.data.stats[0];\r\n    }).catch(err => console.error(err));\r\n}\r\n\r\nexport default NHL;","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { Row, Col, Button, Alert } from 'antd';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport * as viewActions from '../../../actions/viewActions';\r\n\r\nimport NHL from '../../../api';\r\n\r\nconst Home = (props) => {\r\n    const dispatch = useDispatch();\r\n    const cancelToken = axios.CancelToken.source();\r\n\r\n    const api = new NHL();\r\n    const [pacificTeams, setPacificTeams] = useState([]);\r\n    const [centralTeams, setCentralTeams] = useState([]);\r\n    const [metroTeams, setMetroTeams] = useState([]);\r\n    const [atlanticTeams, setAtlanticTeams] = useState([]);\r\n    \r\n    useEffect(() => {\r\n        api.GetTeams(cancelToken.token).then(data => {\r\n            const pTeams = []\r\n            const cTeams = [];\r\n            const mTeams = [];\r\n            const aTeams = [];\r\n            data.forEach(team => {\r\n                switch (team.division.abbreviation) {\r\n                    case 'P':\r\n                        pTeams.push(team);\r\n                        break;\r\n                    case 'C':\r\n                        cTeams.push(team);\r\n                        break;\r\n                    case 'M':\r\n                        mTeams.push(team);\r\n                        break;\r\n                    case 'A':\r\n                        aTeams.push(team);\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n            });\r\n            setPacificTeams(pTeams);\r\n            setCentralTeams(cTeams);\r\n            setMetroTeams(mTeams);\r\n            setAtlanticTeams(aTeams);\r\n        });\r\n        return () => {\r\n            cancelToken.cancel()\r\n        }\r\n    }, []);\r\n\r\n    const handleTeam = (team) => {\r\n        console.log(team);\r\n        dispatch(viewActions.changeView('team', team));\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row gutter={[16,16]}>\r\n                <Col span={12}>\r\n                    <Alert className='centerText' message='Western Conference' type='info' />\r\n                </Col>\r\n                <Col span={12}>\r\n                    <Alert className='centerText' message='Eastern Conference' type='info' />\r\n                </Col>\r\n            </Row>\r\n            <Row gutter={[16,16]}>\r\n                <Col span={6}>\r\n                    <Alert className='centerText' message='Pacific' type='info' />\r\n                </Col>\r\n                <Col span={6}>\r\n                    <Alert className='centerText' message='Central' type='info' />\r\n                </Col>\r\n                <Col span={6}>\r\n                    <Alert className='centerText' message='Metropolitan' type='info' />\r\n                </Col>\r\n                <Col span={6}>\r\n                    <Alert className='centerText' message='Atlantic' type='info' />\r\n                </Col>\r\n            </Row>\r\n            <Row gutter={[16, 16]}>\r\n                <Col span={6}>\r\n                    {\r\n                        pacificTeams.map((team, idx) => {\r\n                            return (\r\n                                <Row key={idx} gutter={[16, 16]}>\r\n                                    <Col span={24}>\r\n                                        <Button onClick={() => handleTeam(team)} type='primary' size='large' block>{team.name}</Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            )\r\n                        })\r\n                    }\r\n                </Col>\r\n                <Col span={6}>\r\n                    {\r\n                        centralTeams.map((team, idx) => {\r\n                            return (\r\n                                <Row key={idx} gutter={[16, 16]}>\r\n                                    <Col span={24}>\r\n                                        <Button onClick={() => handleTeam(team)} type='primary' size='large' block>{team.name}</Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            )\r\n                        })\r\n                    }\r\n                </Col>\r\n                <Col span={6}>\r\n                    {\r\n                        metroTeams.map((team, idx) => {\r\n                            return (\r\n                                <Row key={idx} gutter={[16, 16]}>\r\n                                    <Col span={24}>\r\n                                        <Button onClick={() => handleTeam(team)} type='primary' size='large' block>{team.name}</Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            )\r\n                        })\r\n                    }\r\n                </Col>\r\n                <Col span={6}>\r\n                    {\r\n                        atlanticTeams.map((team, idx) => {\r\n                            return (\r\n                                <Row key={idx} gutter={[16, 16]}>\r\n                                    <Col span={24}>\r\n                                        <Button onClick={() => handleTeam(team)} type='primary' size='large' block>{team.name}</Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            )\r\n                        })\r\n                    }\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Home;","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Button, Col, Collapse, Row } from 'antd';\r\n\r\nimport * as viewActions from '../../../actions/viewActions';\r\n\r\nimport NHL from '../../../api';\r\n\r\nconst Team = (props) => {\r\n    const dispatch = useDispatch();\r\n    const team = props.team;\r\n    const cancelToken = axios.CancelToken.source();\r\n\r\n    const time = new Date();\r\n\r\n    const api = new NHL();\r\n    const [teamStats, setTeamStats] = useState({});\r\n    const [teamRanks, setTeamRanks] = useState({});\r\n    const [leftWing, setLeftWing] = useState([]);\r\n    const [centers, setCenters] = useState([]);\r\n    const [rightWings, setRightWings] = useState([]);\r\n    const [defence, setDefence] = useState([]);\r\n    const [goalies, setGoalies] = useState([]);\r\n\r\n    const l = [];\r\n    const c = [];\r\n    const r = [];\r\n    const d = [];\r\n    const g = [];\r\n\r\n    useEffect(() => {\r\n        api.GetTeamRoster(team.id, cancelToken.token).then(data => {\r\n            data.forEach(player => {\r\n                switch (player.position.code) {\r\n                    case 'L':\r\n                        l.push(player);\r\n                        break;\r\n                    case 'C':\r\n                        c.push(player);\r\n                        break;\r\n                    case 'R':\r\n                        r.push(player);\r\n                        break;\r\n                    case 'D':\r\n                        d.push(player);\r\n                        break;\r\n                    case 'G':\r\n                        g.push(player);\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n            });\r\n            setLeftWing(l);\r\n            setCenters(c);\r\n            setRightWings(r);\r\n            setDefence(d);\r\n            setGoalies(g);\r\n        });\r\n        api.GetTeamStats(team.id, cancelToken.token).then(data => {\r\n            console.log(data[0].splits[0].stat);\r\n            setTeamStats(data[0].splits[0].stat);\r\n            console.log(data[1].splits[0].stat);\r\n            setTeamRanks(data[1].splits[0].stat);\r\n        });\r\n        return () => {\r\n            cancelToken.cancel();\r\n        }\r\n    }, [team]);\r\n\r\n    const handlePlayer = (player) => {\r\n        dispatch(viewActions.changeView('player', player.person.id));\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row justify='center' gutter={[16, 16]}>\r\n                <Col>\r\n                    <h3>Location</h3>\r\n                    <h2>{team.locationName}</h2>\r\n                </Col>\r\n                <Col>\r\n                    <h3>Team</h3>\r\n                    <h2>{team.teamName}</h2>\r\n                </Col>\r\n                <Col>\r\n                    <h3>First Year of Play</h3>\r\n                    <h2>{team.firstYearOfPlay}</h2>\r\n                </Col>\r\n                <Col>\r\n                    <h3>Website</h3>\r\n                    <h2><a href={team.officialSiteUrl} rel='noopener noreferrer' target='_blank'>{team.officialSiteUrl}</a></h2>\r\n                </Col>\r\n                <Col>\r\n                    <h3>Arena</h3>\r\n                    <h2>{team.venue.name}</h2>\r\n                </Col>\r\n                <Col>\r\n                    <h3>Current Time</h3>\r\n                    <h2>{time.toLocaleTimeString('en-US', { timeZone: team.venue.timeZone.id})}</h2>\r\n                </Col>\r\n                <Col>\r\n                    <h3>Games Played</h3>\r\n                    <h2>{teamStats.gamesPlayed}</h2>\r\n                </Col>\r\n            </Row>\r\n            <Row justify='space-between'>\r\n                <Col span={12}>\r\n                    <Collapse accordion>\r\n                        <Collapse.Panel className='centerText' header='Left Wing' key='1' >\r\n                            <Row justify='center' gutter={[16, 16]}>\r\n                            {\r\n                                leftWing.map((player, idx) => {\r\n                                    return (\r\n                                        <Col key={idx} span={8}>\r\n                                            <Button onClick={() => handlePlayer(player)}  block>{player.person.fullName}</Button>\r\n                                        </Col>\r\n                                    )\r\n                                })\r\n                            }\r\n                            </Row>\r\n                        </Collapse.Panel>\r\n                        <Collapse.Panel className='centerText' header='Center' key='2'>\r\n                            <Row justify='center' gutter={[16, 16]}>\r\n                            {\r\n                                centers.map((player, idx) => {\r\n                                    return (\r\n                                        <Col key={idx} span={8}>\r\n                                            <Button onClick={() => handlePlayer(player)} block>{player.person.fullName}</Button>\r\n                                        </Col>\r\n                                    )\r\n                                })\r\n                            }\r\n                            </Row>\r\n                        </Collapse.Panel>\r\n                        <Collapse.Panel className='centerText' header='Right Wing' key='3'>\r\n                            <Row justify='center' gutter={[16, 16]}>\r\n                            {\r\n                                rightWings.map((player, idx) => {\r\n                                    return (\r\n                                        <Col key={idx} span={8}>\r\n                                            <Button onClick={() => handlePlayer(player)} block>{player.person.fullName}</Button>\r\n                                        </Col>\r\n                                    )\r\n                                })\r\n                            }\r\n                            </Row>\r\n                        </Collapse.Panel>\r\n                        <Collapse.Panel className='centerText' header='Defenseman' key='4'>\r\n                            <Row justify='center' gutter={[16, 16]}>\r\n                            {\r\n                                defence.map((player, idx) => {\r\n                                    return (\r\n                                        <Col key={idx} span={8}>\r\n                                            <Button onClick={() => handlePlayer(player)} block>{player.person.fullName}</Button>\r\n                                        </Col>\r\n                                    )\r\n                                })\r\n                            }\r\n                            </Row>\r\n                        </Collapse.Panel>\r\n                        <Collapse.Panel className='centerText' header='Goalie' key='5'>\r\n                            <Row justify='center' gutter={[16, 16]}>\r\n                            {\r\n                                goalies.map((player, idx) => {\r\n                                    return (\r\n                                        <Col key={idx} span={8}>\r\n                                            <Button onClick={() => handlePlayer(player)} block>{player.person.fullName}</Button>\r\n                                        </Col>\r\n                                    )\r\n                                })\r\n                            }\r\n                            </Row>\r\n                        </Collapse.Panel>\r\n                    </Collapse>\r\n                </Col>\r\n                <Col span={11}>\r\n                    <Row gutter={[16, 16]} justify='space-around'>\r\n                        <Col>\r\n                            <h3>Wins</h3>\r\n                            <h2>{teamRanks.wins} - {teamStats.wins}</h2>\r\n                        </Col>\r\n                        <Col>\r\n                            <h3>Losses</h3>\r\n                            <h2>{teamRanks.losses} - {teamStats.losses}</h2>\r\n                        </Col>\r\n                        <Col>\r\n                            <h3>Points</h3>\r\n                            <h2>{teamRanks.pts} - {teamStats.pts}</h2>\r\n                        </Col>\r\n                        <Col>\r\n                            <h3>Faceoff Wins %</h3>\r\n                            <h2>{teamRanks.faceOffWinPercentage} - {teamStats.faceOffWinPercentage}</h2>\r\n                        </Col>\r\n                        <Col>\r\n                            <h3>Shots Allowed</h3>\r\n                            <h2>{teamRanks.shotsAllowed} - {teamStats.shotsAllowed}</h2>\r\n                        </Col>\r\n                        <Col>\r\n                            <h3>Shots Per Game</h3>\r\n                            <h2>{teamRanks.shotsPerGame} - {teamStats.shotsPerGame}</h2>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Team;","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { Col, Descriptions, Empty, Row } from 'antd';\r\n\r\nimport NHL from '../../../api';\r\n\r\nconst Player = (props) => {\r\n    const playerID = props.playerID;\r\n    const [player, setPlayer] = useState({});\r\n    const [position, setPosition] = useState({});\r\n    const [team, setTeam] = useState({});\r\n    const [stats, setStats] = useState({});\r\n    const [ranks, setRanks] = useState({});\r\n    const [season, setSeason] = useState({});\r\n    const api = new NHL();\r\n    const cancelToken = axios.CancelToken.source();\r\n\r\n    useEffect(() => {\r\n        api.GetPlayer(playerID).then(data => {\r\n            console.log(data);\r\n            setPlayer(data);\r\n            setPosition(data.primaryPosition);\r\n            setTeam(data.currentTeam);\r\n            api.GetPlayerStats(playerID, cancelToken.token).then(playerStats => {\r\n                if(playerStats.splits.length > 0) {\r\n                    console.log(playerStats.splits[0].stat);\r\n                    setStats(playerStats.splits[0].stat);\r\n                    setSeason(playerStats.splits[0].season);\r\n                }\r\n            });\r\n            api.GetPlayerStats(playerID, cancelToken.token, 'regularSeasonStatRankings').then(playerRanks => {\r\n                if(playerRanks.splits.length > 0) {\r\n                    console.log(playerRanks.splits[0].stat);\r\n                    setRanks(playerRanks.splits[0].stat);\r\n                }\r\n            });\r\n        });\r\n        return () => {\r\n            console.log('cancelled')\r\n            cancelToken.cancel();\r\n        }\r\n    }, [playerID]);\r\n\r\n    return (\r\n        <>\r\n            <Row gutter={[16, 16]} justify='center'>\r\n                <Col>\r\n                    <Descriptions bordered title='Player' layout='vertical'>\r\n                        <Descriptions.Item label='Name'>{player.fullName}</Descriptions.Item>\r\n                        <Descriptions.Item label='Number'>{player.primaryNumber}</Descriptions.Item>\r\n                        <Descriptions.Item label='Team'>{team.name}</Descriptions.Item>\r\n                        <Descriptions.Item label='Nationality'>{player.nationality}</Descriptions.Item>\r\n                        <Descriptions.Item label='Province/State'>{player.birthStateProvince}</Descriptions.Item>\r\n                        <Descriptions.Item label='City'>{player.birthCity}</Descriptions.Item>\r\n                        <Descriptions.Item label='Birth Date'>{player.birthDate}</Descriptions.Item>\r\n                        <Descriptions.Item label='Age'>{player.currentAge}</Descriptions.Item>\r\n                        <Descriptions.Item label='Position'>{position.name}</Descriptions.Item>\r\n                        <Descriptions.Item label='Height'>{player.height}</Descriptions.Item>\r\n                        <Descriptions.Item label='Weight'>{player.weight}</Descriptions.Item>\r\n                        <Descriptions.Item label='Shoots'>{player.shootsCatches === 'L' ? 'Left' : 'Right'}</Descriptions.Item>\r\n                    </Descriptions>\r\n                </Col>\r\n                {\r\n                    Object.keys(stats).length > 0 && Object.keys(ranks).length > 0 ?\r\n                    <Col>\r\n                        {\r\n                            player.primaryPosition.code === 'G' ?\r\n                            <Descriptions bordered title='Stats' layout='vertical'>\r\n                                <Descriptions.Item label='Season'>{season.toString()}</Descriptions.Item>\r\n                                <Descriptions.Item label='Time On Ice'>{ranks.timeOnIce} - {stats.timeOnIce}</Descriptions.Item>\r\n                                <Descriptions.Item label='Games'>{ranks.games} - {stats.games}</Descriptions.Item>\r\n                                <Descriptions.Item label='Shots Against'>{ranks.shotsAgainst} - {stats.shotsAgainst}</Descriptions.Item>\r\n                                <Descriptions.Item label='Goals Against'>{ranks.goalsAgainst} - {stats.goalsAgainst}</Descriptions.Item>\r\n                                <Descriptions.Item label='Goals Against Average'>{ranks.goalsAgainstAverage} - {stats.goalAgainstAverage}</Descriptions.Item>\r\n                                <Descriptions.Item label='Shutouts'>{ranks.shutOuts} - {stats.shutouts}</Descriptions.Item>\r\n                                <Descriptions.Item label='Saves'>{ranks.saves} - {stats.saves}</Descriptions.Item>\r\n                                <Descriptions.Item label='Save Percentage'>{ranks.savePercentage} - {stats.savePercentage}</Descriptions.Item>\r\n                            </Descriptions>\r\n                            :\r\n                            <Descriptions bordered title='Stats' layout='vertical'>\r\n                                <Descriptions.Item label='Season'>{season.toString()}</Descriptions.Item>\r\n                                <Descriptions.Item label='Points'>{ranks.rankPoints} - {stats.points}</Descriptions.Item>\r\n                                <Descriptions.Item label='Shot %'>{ranks.rankShotPct} - {stats.shotPct}</Descriptions.Item>\r\n                                <Descriptions.Item label='Shots'>{ranks.rankShots} - {stats.shots}</Descriptions.Item>\r\n                                <Descriptions.Item label='Goals'>{ranks.rankGoals} - {stats.goals}</Descriptions.Item>\r\n                                <Descriptions.Item label='Assists'>{ranks.rankAssists} - {stats.assists}</Descriptions.Item>\r\n                                <Descriptions.Item label='Power Play Goals'>{ranks.rankPowerPlayGoals} - {stats.powerPlayGoals}</Descriptions.Item>\r\n                                <Descriptions.Item label='Power Play Points'>{stats.powerPlayPoints}</Descriptions.Item>\r\n                                <Descriptions.Item label='Faceoff %'>{stats.faceOffPct}</Descriptions.Item>\r\n                            </Descriptions>\r\n                        }\r\n                    </Col>\r\n                    : <Col span={10}><Empty /></Col>\r\n                }\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Player;","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Button, Col, Row } from 'antd';\r\nimport { LeftOutlined } from '@ant-design/icons';\r\n\r\nimport './App.css';\r\nimport 'antd/dist/antd.css';\r\n\r\nimport Home from './components/pages/home';\r\nimport Team from './components/pages/team';\r\nimport Player from './components/pages/player';\r\n\r\nimport * as viewActions from './actions/viewActions';\r\n\r\nconst App = () => {\r\n\tconst [content, setContent] = useState(<Home />);\r\n\tconst view = useSelector(state => state.view);\r\n\tconst dispatch = useDispatch();\r\n\r\n\tuseEffect(() => {\r\n\t\tswitch (view.page) {\r\n\t\t\tcase 'home':\r\n\t\t\t\tsetContent(<Home />);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'team':\r\n\t\t\t\tsetContent(<Team team={view.data}/>);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'player':\r\n\t\t\t\tsetContent(<Player playerID={view.data}/>);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tsetContent(<Home />);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}, [view]);\r\n\r\n\tconst handleBack = () => dispatch(viewActions.backView());\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className='page'>\r\n\t\t\t\t<Row className='backButtonRow' gutter={[16, 16]}>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tview.page !== 'home' &&\r\n\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t<Button onClick={handleBack} type='primary' shape='round' icon={<LeftOutlined />}> Go Back</Button>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t}\r\n\t\t\t\t</Row>\r\n\t\t\t\t<Row className='content'>\r\n\t\t\t\t\t<Col span={24}>\r\n\t\t\t\t\t\t{content}\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as actions from '../actions/viewActions';\r\n\r\nconst initialState = {\r\n    page: 'home',\r\n    data: {},\r\n    history: [\r\n        {\r\n            page: 'home',\r\n            data: {}\r\n        }\r\n    ],\r\n};\r\n\r\nconst viewReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actions.BACK_VIEW:\r\n            if (state.history.length > 1) {\r\n                state.history.pop();\r\n                return { ...state, page: state.history[state.history.length - 1].page, data: state.history[state.history.length - 1].data  };\r\n            } else {\r\n                return state;\r\n            }\r\n        case actions.CHANGE_VIEW:\r\n            return { ...state, page: action.payload.name, data: action.payload.data, history: [...state.history, { page: action.payload.name, data: action.payload.data }] }\r\n        case actions.FORWARD_VIEW:\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default viewReducer;","import { combineReducers } from 'redux';\r\n\r\nimport viewReducer from './viewReducer';\r\n\r\nconst rootReducers = combineReducers({\r\n    view: viewReducer\r\n});\r\n\r\nexport default rootReducers;","import { createStore } from 'redux';\r\nimport rootReducers from './reducers';\r\n\r\nconst store = createStore(rootReducers, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './configureStore';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}