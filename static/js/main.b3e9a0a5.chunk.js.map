{"version":3,"sources":["actions/viewActions.js","api/index.js","components/pages/home/index.jsx","components/pages/team/index.jsx","components/pages/player/index.jsx","App.js","serviceWorker.js","reducers/viewReducer.js","reducers/index.js","configureStore.js","index.js"],"names":["changeView","view","data","type","payload","name","ENDPOINT","NHL","attrs","Object","assign","this","prototype","GetTeams","cancelToken","axios","get","then","response","teams","catch","err","console","error","GetTeamStats","teamID","stats","GetTeamRoster","roster","GetPlayer","playerID","people","GetPlayerStats","statType","Home","props","dispatch","useDispatch","CancelToken","source","api","useState","northTeams","setNorthTeams","westTeams","setWestTeams","centralTeams","setCentralTeams","eastTeams","setEastTeams","useEffect","token","nTeams","wTeams","cTeams","eTeams","forEach","team","division","id","push","cancel","handleTeam","log","viewActions","gutter","span","className","message","map","idx","key","onClick","size","block","centered","defaultActiveKey","TabPane","tab","justify","Team","time","Date","teamStats","setTeamStats","teamRanks","setTeamRanks","leftWing","setLeftWing","centers","setCenters","rightWings","setRightWings","defence","setDefence","goalies","setGoalies","l","c","r","d","g","player","position","code","splits","stat","handlePlayer","person","locationName","teamName","firstYearOfPlay","href","officialSiteUrl","rel","target","venue","toLocaleTimeString","timeZone","gamesPlayed","accordion","Panel","header","fullName","wins","losses","pts","faceOffWinPercentage","shotsAllowed","shotsPerGame","Player","setPlayer","setPosition","setTeam","setStats","ranks","setRanks","season","setSeason","primaryPosition","currentTeam","playerStats","length","playerRanks","bordered","title","layout","Item","label","primaryNumber","nationality","birthStateProvince","birthCity","birthDate","currentAge","height","weight","shootsCatches","keys","toString","timeOnIce","games","shotsAgainst","goalsAgainst","goalsAgainstAverage","goalAgainstAverage","shutOuts","shutouts","saves","savePercentage","rankPoints","points","rankShotPct","shotPct","rankShots","shots","rankGoals","goals","rankAssists","assists","rankPowerPlayGoals","powerPlayGoals","powerPlayPoints","faceOffPct","App","content","setContent","useSelector","state","page","handleBack","viewClassName","shape","icon","LeftOutlined","Boolean","window","location","hostname","match","initialState","history","viewReducer","action","pop","rootReducers","combineReducers","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b3e9a0a5.chunk.js","sourcesContent":["export const BACK_VIEW = 'backView';\r\nexport const CHANGE_VIEW = 'changeView';\r\nexport const FORWARD_VIEW = 'forwardView';\r\n\r\nexport const backView = () => {\r\n    return {\r\n        type: BACK_VIEW\r\n    }\r\n};\r\n\r\nexport const changeView = (view, data = {}) => {\r\n    return {\r\n        type: CHANGE_VIEW,\r\n        payload: {\r\n            name: view,\r\n            data\r\n        }\r\n    }\r\n};","import axios from 'axios';\r\n\r\n// https://gitlab.com/dword4/nhlapi/-/blob/master/stats-api.md\r\nconst ENDPOINT = 'https://statsapi.web.nhl.com/api/v1';\r\n\r\nconst NHL = function(attrs) {\r\n    if (attrs) {\r\n        Object.assign(this, attrs);\r\n    }\r\n};\r\n\r\nNHL.prototype.GetTeams = function(cancelToken) {\r\n    return axios.get(`${ENDPOINT}/teams`, {\r\n        cancelToken: cancelToken\r\n    }).then(response => {\r\n        return response.data.teams;\r\n    }).catch(err => console.error(err));\r\n}\r\n\r\nNHL.prototype.GetTeamStats = function(teamID, cancelToken) {\r\n    return axios.get(`${ENDPOINT}/teams/${teamID}/stats`, {\r\n        cancelToken: cancelToken\r\n    }).then(response => {\r\n        return response.data.stats;\r\n    }).catch(err => console.error(err));\r\n}\r\n\r\nNHL.prototype.GetTeamRoster = function(teamID, cancelToken) {\r\n    return axios.get(`${ENDPOINT}/teams/${teamID}/roster`, {\r\n        cancelToken: cancelToken\r\n    }).then(response => {\r\n        return response.data.roster;\r\n    }).catch(err => console.error(err));\r\n}\r\n\r\nNHL.prototype.GetPlayer = function(playerID, cancelToken) {\r\n    return axios.get(`${ENDPOINT}/people/${playerID}`, {\r\n        cancelToken: cancelToken\r\n    }).then(response => {\r\n        return response.data.people[0];\r\n    }).catch(err => console.error(err));\r\n}\r\n\r\nNHL.prototype.GetPlayerStats = function(playerID, cancelToken, statType = 'statsSingleSeason') {\r\n    return axios.get(`${ENDPOINT}/people/${playerID}/stats?stats=${statType}`, {\r\n        cancelToken: cancelToken\r\n    }).then(response => {\r\n        return response.data.stats[0];\r\n    }).catch(err => console.error(err));\r\n}\r\n\r\nexport default NHL;","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Row, Col, Button, Alert, Tabs } from \"antd\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { BrowserView, MobileView } from \"react-device-detect\";\r\n\r\nimport * as viewActions from \"../../../actions/viewActions\";\r\n\r\nimport NHL from \"../../../api\";\r\n\r\nconst Home = (props) => {\r\n\tconst dispatch = useDispatch();\r\n\tconst cancelToken = axios.CancelToken.source();\r\n\r\n\tconst api = new NHL();\r\n\tconst [northTeams, setNorthTeams] = useState([]);\r\n\tconst [westTeams, setWestTeams] = useState([]);\r\n\tconst [centralTeams, setCentralTeams] = useState([]);\r\n\tconst [eastTeams, setEastTeams] = useState([]);\r\n\r\n\tuseEffect(() => {\r\n\t\tapi.GetTeams(cancelToken.token).then((data) => {\r\n\t\t\tconst nTeams = [];\r\n\t\t\tconst wTeams = [];\r\n\t\t\tconst cTeams = [];\r\n\t\t\tconst eTeams = [];\r\n\t\t\tdata.forEach((team) => {\r\n\t\t\t\tswitch (team.division.id) {\r\n\t\t\t\t\tcase 28:\r\n\t\t\t\t\t\tnTeams.push(team);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 27:\r\n\t\t\t\t\t\twTeams.push(team);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 26:\r\n\t\t\t\t\t\tcTeams.push(team);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 25:\r\n\t\t\t\t\t\teTeams.push(team);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tsetNorthTeams(nTeams);\r\n\t\t\tsetWestTeams(wTeams);\r\n\t\t\tsetCentralTeams(cTeams);\r\n\t\t\tsetEastTeams(eTeams);\r\n\t\t});\r\n\t\treturn () => {\r\n\t\t\tcancelToken.cancel();\r\n\t\t};\r\n\t}, []);\r\n\r\n\tconst handleTeam = (team) => {\r\n\t\tconsole.log(team);\r\n\t\tdispatch(viewActions.changeView(\"team\", team));\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<BrowserView>\r\n\t\t\t\t<Row gutter={[16, 16]}>\r\n\t\t\t\t\t<Col span={6}>\r\n\t\t\t\t\t\t<Alert\r\n\t\t\t\t\t\t\tclassName=\"centerText\"\r\n\t\t\t\t\t\t\tmessage=\"North\"\r\n\t\t\t\t\t\t\ttype=\"info\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col span={6}>\r\n\t\t\t\t\t\t<Alert\r\n\t\t\t\t\t\t\tclassName=\"centerText\"\r\n\t\t\t\t\t\t\tmessage=\"West\"\r\n\t\t\t\t\t\t\ttype=\"info\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col span={6}>\r\n\t\t\t\t\t\t<Alert\r\n\t\t\t\t\t\t\tclassName=\"centerText\"\r\n\t\t\t\t\t\t\tmessage=\"Central\"\r\n\t\t\t\t\t\t\ttype=\"info\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col span={6}>\r\n\t\t\t\t\t\t<Alert\r\n\t\t\t\t\t\t\tclassName=\"centerText\"\r\n\t\t\t\t\t\t\tmessage=\"East\"\r\n\t\t\t\t\t\t\ttype=\"info\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t\t<Row gutter={[16, 16]}>\r\n\t\t\t\t\t<Col span={6}>\r\n\t\t\t\t\t\t{northTeams.map((team, idx) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<Row key={idx} gutter={[16, 16]}>\r\n\t\t\t\t\t\t\t\t\t<Col span={24}>\r\n\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleTeam(team)}\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"primary\"\r\n\t\t\t\t\t\t\t\t\t\t\tsize=\"large\"\r\n\t\t\t\t\t\t\t\t\t\t\tblock>\r\n\t\t\t\t\t\t\t\t\t\t\t{team.name}\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col span={6}>\r\n\t\t\t\t\t\t{westTeams.map((team, idx) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<Row key={idx} gutter={[16, 16]}>\r\n\t\t\t\t\t\t\t\t\t<Col span={24}>\r\n\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleTeam(team)}\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"primary\"\r\n\t\t\t\t\t\t\t\t\t\t\tsize=\"large\"\r\n\t\t\t\t\t\t\t\t\t\t\tblock>\r\n\t\t\t\t\t\t\t\t\t\t\t{team.name}\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col span={6}>\r\n\t\t\t\t\t\t{centralTeams.map((team, idx) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<Row key={idx} gutter={[16, 16]}>\r\n\t\t\t\t\t\t\t\t\t<Col span={24}>\r\n\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleTeam(team)}\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"primary\"\r\n\t\t\t\t\t\t\t\t\t\t\tsize=\"large\"\r\n\t\t\t\t\t\t\t\t\t\t\tblock>\r\n\t\t\t\t\t\t\t\t\t\t\t{team.name}\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col span={6}>\r\n\t\t\t\t\t\t{eastTeams.map((team, idx) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<Row key={idx} gutter={[16, 16]}>\r\n\t\t\t\t\t\t\t\t\t<Col span={24}>\r\n\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleTeam(team)}\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"primary\"\r\n\t\t\t\t\t\t\t\t\t\t\tsize=\"large\"\r\n\t\t\t\t\t\t\t\t\t\t\tblock>\r\n\t\t\t\t\t\t\t\t\t\t\t{team.name}\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t</BrowserView>\r\n\t\t\t<MobileView>\r\n\t\t\t\t<Row gutter={[8, 8]}>\r\n\t\t\t\t\t<Col span={12}>\r\n\t\t\t\t\t\t<Alert\r\n\t\t\t\t\t\t\tclassName=\"centerText\"\r\n\t\t\t\t\t\t\tmessage=\"Western Conference\"\r\n\t\t\t\t\t\t\ttype=\"info\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col span={12}>\r\n\t\t\t\t\t\t<Alert\r\n\t\t\t\t\t\t\tclassName=\"centerText\"\r\n\t\t\t\t\t\t\tmessage=\"Eastern Conference\"\r\n\t\t\t\t\t\t\ttype=\"info\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t\t<Tabs centered defaultActiveKey={1} type=\"card\">\r\n\t\t\t\t\t<Tabs.TabPane tab=\"Pacific\" key=\"1\">\r\n\t\t\t\t\t\t<Row gutter={[8, 8]} justify=\"center\">\r\n\t\t\t\t\t\t\t{northTeams.map((team, idx) => {\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<Col key={idx} span={16}>\r\n\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleTeam(team)}\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"primary\"\r\n\t\t\t\t\t\t\t\t\t\t\tsize=\"large\"\r\n\t\t\t\t\t\t\t\t\t\t\tblock>\r\n\t\t\t\t\t\t\t\t\t\t\t{team.name}\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t</Tabs.TabPane>\r\n\t\t\t\t\t<Tabs.TabPane tab=\"Central\" key=\"2\">\r\n\t\t\t\t\t\t<Row gutter={[8, 8]} justify=\"center\">\r\n\t\t\t\t\t\t\t{westTeams.map((team, idx) => {\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<Col key={idx} span={16}>\r\n\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleTeam(team)}\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"primary\"\r\n\t\t\t\t\t\t\t\t\t\t\tsize=\"large\"\r\n\t\t\t\t\t\t\t\t\t\t\tblock>\r\n\t\t\t\t\t\t\t\t\t\t\t{team.name}\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t</Tabs.TabPane>\r\n\t\t\t\t\t<Tabs.TabPane tab=\"Metropolitan\" key=\"3\">\r\n\t\t\t\t\t\t<Row gutter={[8, 8]} justify=\"center\">\r\n\t\t\t\t\t\t\t{centralTeams.map((team, idx) => {\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<Col key={idx} span={16}>\r\n\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleTeam(team)}\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"primary\"\r\n\t\t\t\t\t\t\t\t\t\t\tsize=\"large\"\r\n\t\t\t\t\t\t\t\t\t\t\tblock>\r\n\t\t\t\t\t\t\t\t\t\t\t{team.name}\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t</Tabs.TabPane>\r\n\t\t\t\t\t<Tabs.TabPane tab=\"Atlantic\" key=\"4\">\r\n\t\t\t\t\t\t<Row gutter={[8, 8]} justify=\"center\">\r\n\t\t\t\t\t\t\t{eastTeams.map((team, idx) => {\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<Col key={idx} span={16}>\r\n\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleTeam(team)}\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"primary\"\r\n\t\t\t\t\t\t\t\t\t\t\tsize=\"large\"\r\n\t\t\t\t\t\t\t\t\t\t\tblock>\r\n\t\t\t\t\t\t\t\t\t\t\t{team.name}\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t</Tabs.TabPane>\r\n\t\t\t\t</Tabs>\r\n\t\t\t</MobileView>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Home;\r\n","import { Button, Col, Collapse, Row } from 'antd';\r\nimport axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { BrowserView, MobileView } from 'react-device-detect';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport * as viewActions from '../../../actions/viewActions';\r\n\r\nimport NHL from '../../../api';\r\n\r\nconst Team = (props) => {\r\n    const dispatch = useDispatch();\r\n    const team = props.team;\r\n    const cancelToken = axios.CancelToken.source();\r\n\r\n    const time = new Date();\r\n\r\n    const api = new NHL();\r\n    const [teamStats, setTeamStats] = useState({});\r\n    const [teamRanks, setTeamRanks] = useState({});\r\n    const [leftWing, setLeftWing] = useState([]);\r\n    const [centers, setCenters] = useState([]);\r\n    const [rightWings, setRightWings] = useState([]);\r\n    const [defence, setDefence] = useState([]);\r\n    const [goalies, setGoalies] = useState([]);\r\n\r\n    const l = [];\r\n    const c = [];\r\n    const r = [];\r\n    const d = [];\r\n    const g = [];\r\n\r\n    useEffect(() => {\r\n        api.GetTeamRoster(team.id, cancelToken.token).then(data => {\r\n            data.forEach(player => {\r\n                switch (player.position.code) {\r\n                    case 'L':\r\n                        l.push(player);\r\n                        break;\r\n                    case 'C':\r\n                        c.push(player);\r\n                        break;\r\n                    case 'R':\r\n                        r.push(player);\r\n                        break;\r\n                    case 'D':\r\n                        d.push(player);\r\n                        break;\r\n                    case 'G':\r\n                        g.push(player);\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n            });\r\n            setLeftWing(l);\r\n            setCenters(c);\r\n            setRightWings(r);\r\n            setDefence(d);\r\n            setGoalies(g);\r\n        });\r\n        api.GetTeamStats(team.id, cancelToken.token).then(data => {\r\n            console.log(data[0].splits[0].stat);\r\n            setTeamStats(data[0].splits[0].stat);\r\n            console.log(data[1].splits[0].stat);\r\n            setTeamRanks(data[1].splits[0].stat);\r\n        });\r\n        return () => {\r\n            cancelToken.cancel();\r\n        }\r\n    }, [team]);\r\n\r\n    const handlePlayer = (player) => {\r\n        dispatch(viewActions.changeView('player', player.person.id));\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <BrowserView>\r\n                <Row justify='center' gutter={[16, 16]}>\r\n                    <Col>\r\n                        <h3>Location</h3>\r\n                        <h2>{team.locationName}</h2>\r\n                    </Col>\r\n                    <Col>\r\n                        <h3>Team</h3>\r\n                        <h2>{team.teamName}</h2>\r\n                    </Col>\r\n                    <Col>\r\n                        <h3>First Year of Play</h3>\r\n                        <h2>{team.firstYearOfPlay}</h2>\r\n                    </Col>\r\n                    <Col>\r\n                        <h3>Website</h3>\r\n                        <h2><a href={team.officialSiteUrl} rel='noopener noreferrer' target='_blank'>{team.officialSiteUrl}</a></h2>\r\n                    </Col>\r\n                    <Col>\r\n                        <h3>Arena</h3>\r\n                        <h2>{team.venue.name}</h2>\r\n                    </Col>\r\n                    <Col>\r\n                        <h3>Current Time</h3>\r\n                        <h2>{time.toLocaleTimeString('en-US', { timeZone: team.venue.timeZone.id})}</h2>\r\n                    </Col>\r\n                    <Col>\r\n                        <h3>Games Played</h3>\r\n                        <h2>{teamStats.gamesPlayed}</h2>\r\n                    </Col>\r\n                </Row>\r\n                <Row justify='space-between'>\r\n                    <Col span={12}>\r\n                        <Collapse accordion>\r\n                            <Collapse.Panel className='centerText' header='Left Wing' key='1' >\r\n                                <Row justify='center' gutter={[16, 16]}>\r\n                                {\r\n                                    leftWing.map((player, idx) => {\r\n                                        return (\r\n                                            <Col key={idx} span={8}>\r\n                                                <Button onClick={() => handlePlayer(player)}  block>{player.person.fullName}</Button>\r\n                                            </Col>\r\n                                        )\r\n                                    })\r\n                                }\r\n                                </Row>\r\n                            </Collapse.Panel>\r\n                            <Collapse.Panel className='centerText' header='Center' key='2'>\r\n                                <Row justify='center' gutter={[16, 16]}>\r\n                                {\r\n                                    centers.map((player, idx) => {\r\n                                        return (\r\n                                            <Col key={idx} span={8}>\r\n                                                <Button onClick={() => handlePlayer(player)} block>{player.person.fullName}</Button>\r\n                                            </Col>\r\n                                        )\r\n                                    })\r\n                                }\r\n                                </Row>\r\n                            </Collapse.Panel>\r\n                            <Collapse.Panel className='centerText' header='Right Wing' key='3'>\r\n                                <Row justify='center' gutter={[16, 16]}>\r\n                                {\r\n                                    rightWings.map((player, idx) => {\r\n                                        return (\r\n                                            <Col key={idx} span={8}>\r\n                                                <Button onClick={() => handlePlayer(player)} block>{player.person.fullName}</Button>\r\n                                            </Col>\r\n                                        )\r\n                                    })\r\n                                }\r\n                                </Row>\r\n                            </Collapse.Panel>\r\n                            <Collapse.Panel className='centerText' header='Defenseman' key='4'>\r\n                                <Row justify='center' gutter={[16, 16]}>\r\n                                {\r\n                                    defence.map((player, idx) => {\r\n                                        return (\r\n                                            <Col key={idx} span={8}>\r\n                                                <Button onClick={() => handlePlayer(player)} block>{player.person.fullName}</Button>\r\n                                            </Col>\r\n                                        )\r\n                                    })\r\n                                }\r\n                                </Row>\r\n                            </Collapse.Panel>\r\n                            <Collapse.Panel className='centerText' header='Goalie' key='5'>\r\n                                <Row justify='center' gutter={[16, 16]}>\r\n                                {\r\n                                    goalies.map((player, idx) => {\r\n                                        return (\r\n                                            <Col key={idx} span={8}>\r\n                                                <Button onClick={() => handlePlayer(player)} block>{player.person.fullName}</Button>\r\n                                            </Col>\r\n                                        )\r\n                                    })\r\n                                }\r\n                                </Row>\r\n                            </Collapse.Panel>\r\n                        </Collapse>\r\n                    </Col>\r\n                    <Col span={11}>\r\n                        <Row gutter={[16, 16]} justify='space-around'>\r\n                            <Col>\r\n                                <h3>Wins</h3>\r\n                                <h2>{teamRanks.wins} - {teamStats.wins}</h2>\r\n                            </Col>\r\n                            <Col>\r\n                                <h3>Losses</h3>\r\n                                <h2>{teamRanks.losses} - {teamStats.losses}</h2>\r\n                            </Col>\r\n                            <Col>\r\n                                <h3>Points</h3>\r\n                                <h2>{teamRanks.pts} - {teamStats.pts}</h2>\r\n                            </Col>\r\n                            <Col>\r\n                                <h3>Faceoff Wins %</h3>\r\n                                <h2>{teamRanks.faceOffWinPercentage} - {teamStats.faceOffWinPercentage}</h2>\r\n                            </Col>\r\n                            <Col>\r\n                                <h3>Shots Allowed</h3>\r\n                                <h2>{teamRanks.shotsAllowed} - {teamStats.shotsAllowed}</h2>\r\n                            </Col>\r\n                            <Col>\r\n                                <h3>Shots Per Game</h3>\r\n                                <h2>{teamRanks.shotsPerGame} - {teamStats.shotsPerGame}</h2>\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n            </BrowserView>\r\n            <MobileView>\r\n            <Row justify='space-around' gutter={[4,4]}>\r\n                    <Col>\r\n                        <h3>Team</h3>\r\n                        <h2>{team.name}</h2>\r\n                    </Col>\r\n                    <Col>\r\n                        <h3>First Year of Play</h3>\r\n                        <h2>{team.firstYearOfPlay}</h2>\r\n                    </Col>\r\n                    <Col>\r\n                        <h3>Website</h3>\r\n                        <h2><a href={team.officialSiteUrl} rel='noopener noreferrer' target='_blank'>{team.officialSiteUrl}</a></h2>\r\n                    </Col>\r\n                    <Col>\r\n                        <h3>Arena</h3>\r\n                        <h2>{team.venue.name}</h2>\r\n                    </Col>\r\n                    <Col>\r\n                        <h3>Games Played</h3>\r\n                        <h2>{teamStats.gamesPlayed}</h2>\r\n                    </Col>\r\n                </Row>\r\n                <Row justify='space-between'>\r\n                    <Col span={24}>\r\n                        <Collapse accordion>\r\n                            <Collapse.Panel className='centerText' header='Left Wing' key='1' >\r\n                                <Row justify='center' gutter={[4,4]}>\r\n                                {\r\n                                    leftWing.map((player, idx) => {\r\n                                        return (\r\n                                            <Col key={idx} span={12}>\r\n                                                <Button onClick={() => handlePlayer(player)}  block>{player.person.fullName}</Button>\r\n                                            </Col>\r\n                                        )\r\n                                    })\r\n                                }\r\n                                </Row>\r\n                            </Collapse.Panel>\r\n                            <Collapse.Panel className='centerText' header='Center' key='2'>\r\n                                <Row justify='center' gutter={[4,4]}>\r\n                                {\r\n                                    centers.map((player, idx) => {\r\n                                        return (\r\n                                            <Col key={idx} span={12}>\r\n                                                <Button onClick={() => handlePlayer(player)} block>{player.person.fullName}</Button>\r\n                                            </Col>\r\n                                        )\r\n                                    })\r\n                                }\r\n                                </Row>\r\n                            </Collapse.Panel>\r\n                            <Collapse.Panel className='centerText' header='Right Wing' key='3'>\r\n                                <Row justify='center' gutter={[4,4]}>\r\n                                {\r\n                                    rightWings.map((player, idx) => {\r\n                                        return (\r\n                                            <Col key={idx} span={12}>\r\n                                                <Button onClick={() => handlePlayer(player)} block>{player.person.fullName}</Button>\r\n                                            </Col>\r\n                                        )\r\n                                    })\r\n                                }\r\n                                </Row>\r\n                            </Collapse.Panel>\r\n                            <Collapse.Panel className='centerText' header='Defenseman' key='4'>\r\n                                <Row justify='center' gutter={[4,4]}>\r\n                                {\r\n                                    defence.map((player, idx) => {\r\n                                        return (\r\n                                            <Col key={idx} span={12}>\r\n                                                <Button onClick={() => handlePlayer(player)} block>{player.person.fullName}</Button>\r\n                                            </Col>\r\n                                        )\r\n                                    })\r\n                                }\r\n                                </Row>\r\n                            </Collapse.Panel>\r\n                            <Collapse.Panel className='centerText' header='Goalie' key='5'>\r\n                                <Row justify='center' gutter={[4,4]}>\r\n                                {\r\n                                    goalies.map((player, idx) => {\r\n                                        return (\r\n                                            <Col key={idx} span={12}>\r\n                                                <Button onClick={() => handlePlayer(player)} block>{player.person.fullName}</Button>\r\n                                            </Col>\r\n                                        )\r\n                                    })\r\n                                }\r\n                                </Row>\r\n                            </Collapse.Panel>\r\n                        </Collapse>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        <Row gutter={[4,4]} justify='space-around'>\r\n                            <Col>\r\n                                <h3>Wins</h3>\r\n                                <h2>{teamRanks.wins} - {teamStats.wins}</h2>\r\n                            </Col>\r\n                            <Col>\r\n                                <h3>Losses</h3>\r\n                                <h2>{teamRanks.losses} - {teamStats.losses}</h2>\r\n                            </Col>\r\n                            <Col>\r\n                                <h3>Points</h3>\r\n                                <h2>{teamRanks.pts} - {teamStats.pts}</h2>\r\n                            </Col>\r\n                            <Col>\r\n                                <h3>Faceoff Wins %</h3>\r\n                                <h2>{teamRanks.faceOffWinPercentage} - {teamStats.faceOffWinPercentage}</h2>\r\n                            </Col>\r\n                            <Col>\r\n                                <h3>Shots Allowed</h3>\r\n                                <h2>{teamRanks.shotsAllowed} - {teamStats.shotsAllowed}</h2>\r\n                            </Col>\r\n                            <Col>\r\n                                <h3>Shots Per Game</h3>\r\n                                <h2>{teamRanks.shotsPerGame} - {teamStats.shotsPerGame}</h2>\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n            </MobileView>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Team;","import { Col, Descriptions, Empty, Row } from 'antd';\r\nimport axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { BrowserView, MobileView } from 'react-device-detect';\r\n\r\nimport NHL from '../../../api';\r\n\r\nconst Player = (props) => {\r\n    const playerID = props.playerID;\r\n    const [player, setPlayer] = useState({});\r\n    const [position, setPosition] = useState({});\r\n    const [team, setTeam] = useState({});\r\n    const [stats, setStats] = useState({});\r\n    const [ranks, setRanks] = useState({});\r\n    const [season, setSeason] = useState({});\r\n    const api = new NHL();\r\n    const cancelToken = axios.CancelToken.source();\r\n\r\n    useEffect(() => {\r\n        api.GetPlayer(playerID).then(data => {\r\n            console.log(data);\r\n            setPlayer(data);\r\n            setPosition(data.primaryPosition);\r\n            setTeam(data.currentTeam);\r\n            api.GetPlayerStats(playerID, cancelToken.token).then(playerStats => {\r\n                if(playerStats.splits.length > 0) {\r\n                    console.log(playerStats.splits[0].stat);\r\n                    setStats(playerStats.splits[0].stat);\r\n                    setSeason(playerStats.splits[0].season);\r\n                }\r\n            });\r\n            api.GetPlayerStats(playerID, cancelToken.token, 'regularSeasonStatRankings').then(playerRanks => {\r\n                if(playerRanks.splits.length > 0) {\r\n                    console.log(playerRanks.splits[0].stat);\r\n                    setRanks(playerRanks.splits[0].stat);\r\n                }\r\n            });\r\n        });\r\n        return () => {\r\n            console.log('cancelled')\r\n            cancelToken.cancel();\r\n        }\r\n    }, [playerID]);\r\n\r\n    return (\r\n        <>\r\n            <BrowserView>\r\n                <Row gutter={[16, 16]} justify='center'>\r\n                    <Col>\r\n                        <Descriptions bordered title='Player' layout='vertical'>\r\n                            <Descriptions.Item label='Name'>{player.fullName}</Descriptions.Item>\r\n                            <Descriptions.Item label='Number'>{player.primaryNumber}</Descriptions.Item>\r\n                            <Descriptions.Item label='Team'>{team.name}</Descriptions.Item>\r\n                            <Descriptions.Item label='Nationality'>{player.nationality}</Descriptions.Item>\r\n                            <Descriptions.Item label='Province/State'>{player.birthStateProvince}</Descriptions.Item>\r\n                            <Descriptions.Item label='City'>{player.birthCity}</Descriptions.Item>\r\n                            <Descriptions.Item label='Birth Date'>{player.birthDate}</Descriptions.Item>\r\n                            <Descriptions.Item label='Age'>{player.currentAge}</Descriptions.Item>\r\n                            <Descriptions.Item label='Position'>{position.name}</Descriptions.Item>\r\n                            <Descriptions.Item label='Height'>{player.height}</Descriptions.Item>\r\n                            <Descriptions.Item label='Weight'>{player.weight}</Descriptions.Item>\r\n                            <Descriptions.Item label='Shoots'>{player.shootsCatches === 'L' ? 'Left' : 'Right'}</Descriptions.Item>\r\n                        </Descriptions>\r\n                    </Col>\r\n                    {\r\n                        Object.keys(stats).length > 0 && Object.keys(ranks).length > 0 ?\r\n                        <Col>\r\n                            {\r\n                                player.primaryPosition.code === 'G' ?\r\n                                <Descriptions bordered title='Stats' layout='vertical'>\r\n                                    <Descriptions.Item label='Season'>{season.toString()}</Descriptions.Item>\r\n                                    <Descriptions.Item label='Time On Ice'>{ranks.timeOnIce} - {stats.timeOnIce}</Descriptions.Item>\r\n                                    <Descriptions.Item label='Games'>{ranks.games} - {stats.games}</Descriptions.Item>\r\n                                    <Descriptions.Item label='Shots Against'>{ranks.shotsAgainst} - {stats.shotsAgainst}</Descriptions.Item>\r\n                                    <Descriptions.Item label='Goals Against'>{ranks.goalsAgainst} - {stats.goalsAgainst}</Descriptions.Item>\r\n                                    <Descriptions.Item label='Goals Against Average'>{ranks.goalsAgainstAverage} - {stats.goalAgainstAverage}</Descriptions.Item>\r\n                                    <Descriptions.Item label='Shutouts'>{ranks.shutOuts} - {stats.shutouts}</Descriptions.Item>\r\n                                    <Descriptions.Item label='Saves'>{ranks.saves} - {stats.saves}</Descriptions.Item>\r\n                                    <Descriptions.Item label='Save Percentage'>{ranks.savePercentage} - {stats.savePercentage}</Descriptions.Item>\r\n                                </Descriptions>\r\n                                :\r\n                                <Descriptions bordered title='Stats' layout='vertical'>\r\n                                    <Descriptions.Item label='Season'>{season.toString()}</Descriptions.Item>\r\n                                    <Descriptions.Item label='Points'>{ranks.rankPoints} - {stats.points}</Descriptions.Item>\r\n                                    <Descriptions.Item label='Shot %'>{ranks.rankShotPct} - {stats.shotPct}</Descriptions.Item>\r\n                                    <Descriptions.Item label='Shots'>{ranks.rankShots} - {stats.shots}</Descriptions.Item>\r\n                                    <Descriptions.Item label='Goals'>{ranks.rankGoals} - {stats.goals}</Descriptions.Item>\r\n                                    <Descriptions.Item label='Assists'>{ranks.rankAssists} - {stats.assists}</Descriptions.Item>\r\n                                    <Descriptions.Item label='Power Play Goals'>{ranks.rankPowerPlayGoals} - {stats.powerPlayGoals}</Descriptions.Item>\r\n                                    <Descriptions.Item label='Power Play Points'>{stats.powerPlayPoints}</Descriptions.Item>\r\n                                    <Descriptions.Item label='Faceoff %'>{stats.faceOffPct}</Descriptions.Item>\r\n                                </Descriptions>\r\n                            }\r\n                        </Col>\r\n                        : <Col span={10}><Empty /></Col>\r\n                    }\r\n                </Row>\r\n            </BrowserView>\r\n            <MobileView>\r\n            <Row gutter={[4,4]} justify='center'>\r\n                    <Col span={24}>\r\n                        <Descriptions bordered title='Player' layout='vertical'>\r\n                            <Descriptions.Item label='Name'>{player.fullName}</Descriptions.Item>\r\n                            <Descriptions.Item label='Number'>{player.primaryNumber}</Descriptions.Item>\r\n                            <Descriptions.Item label='Team'>{team.name}</Descriptions.Item>\r\n                            <Descriptions.Item label='Nationality'>{player.nationality}</Descriptions.Item>\r\n                            <Descriptions.Item label='Province/State'>{player.birthStateProvince}</Descriptions.Item>\r\n                            <Descriptions.Item label='City'>{player.birthCity}</Descriptions.Item>\r\n                            <Descriptions.Item label='Birth Date'>{player.birthDate}</Descriptions.Item>\r\n                            <Descriptions.Item label='Age'>{player.currentAge}</Descriptions.Item>\r\n                            <Descriptions.Item label='Position'>{position.name}</Descriptions.Item>\r\n                            <Descriptions.Item label='Height'>{player.height}</Descriptions.Item>\r\n                            <Descriptions.Item label='Weight'>{player.weight}</Descriptions.Item>\r\n                            <Descriptions.Item label='Shoots'>{player.shootsCatches === 'L' ? 'Left' : 'Right'}</Descriptions.Item>\r\n                        </Descriptions>\r\n                    </Col>\r\n                    {\r\n                        Object.keys(stats).length > 0 && Object.keys(ranks).length > 0 ?\r\n                        <Col span={24}>\r\n                            {\r\n                                player.primaryPosition.code === 'G' ?\r\n                                <Descriptions bordered title='Stats' layout='vertical'>\r\n                                    <Descriptions.Item label='Season'>{season.toString()}</Descriptions.Item>\r\n                                    <Descriptions.Item label='Time On Ice'>{ranks.timeOnIce} - {stats.timeOnIce}</Descriptions.Item>\r\n                                    <Descriptions.Item label='Games'>{ranks.games} - {stats.games}</Descriptions.Item>\r\n                                    <Descriptions.Item label='Shots Against'>{ranks.shotsAgainst} - {stats.shotsAgainst}</Descriptions.Item>\r\n                                    <Descriptions.Item label='Goals Against'>{ranks.goalsAgainst} - {stats.goalsAgainst}</Descriptions.Item>\r\n                                    <Descriptions.Item label='Goals Against Average'>{ranks.goalsAgainstAverage} - {stats.goalAgainstAverage}</Descriptions.Item>\r\n                                    <Descriptions.Item label='Shutouts'>{ranks.shutOuts} - {stats.shutouts}</Descriptions.Item>\r\n                                    <Descriptions.Item label='Saves'>{ranks.saves} - {stats.saves}</Descriptions.Item>\r\n                                    <Descriptions.Item label='Save Percentage'>{ranks.savePercentage} - {stats.savePercentage}</Descriptions.Item>\r\n                                </Descriptions>\r\n                                :\r\n                                <Descriptions bordered title='Stats' layout='vertical'>\r\n                                    <Descriptions.Item label='Season'>{season.toString()}</Descriptions.Item>\r\n                                    <Descriptions.Item label='Points'>{ranks.rankPoints} - {stats.points}</Descriptions.Item>\r\n                                    <Descriptions.Item label='Shot %'>{ranks.rankShotPct} - {stats.shotPct}</Descriptions.Item>\r\n                                    <Descriptions.Item label='Shots'>{ranks.rankShots} - {stats.shots}</Descriptions.Item>\r\n                                    <Descriptions.Item label='Goals'>{ranks.rankGoals} - {stats.goals}</Descriptions.Item>\r\n                                    <Descriptions.Item label='Assists'>{ranks.rankAssists} - {stats.assists}</Descriptions.Item>\r\n                                    <Descriptions.Item label='Power Play Goals'>{ranks.rankPowerPlayGoals} - {stats.powerPlayGoals}</Descriptions.Item>\r\n                                    <Descriptions.Item label='Power Play Points'>{stats.powerPlayPoints}</Descriptions.Item>\r\n                                    <Descriptions.Item label='Faceoff %'>{stats.faceOffPct}</Descriptions.Item>\r\n                                </Descriptions>\r\n                            }\r\n                        </Col>\r\n                        : <Col span={24}><Empty /></Col>\r\n                    }\r\n                </Row>\r\n            </MobileView>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Player;","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Button, Col, Row } from 'antd';\r\nimport { LeftOutlined } from '@ant-design/icons';\r\n\r\nimport './App.css';\r\nimport 'antd/dist/antd.css';\r\n\r\nimport Home from './components/pages/home';\r\nimport Team from './components/pages/team';\r\nimport Player from './components/pages/player';\r\n\r\nimport * as viewActions from './actions/viewActions';\r\nimport { BrowserView, MobileView } from 'react-device-detect';\r\n\r\nconst App = () => {\r\n\tconst [content, setContent] = useState(<Home />);\r\n\tconst view = useSelector(state => state.view);\r\n\tconst dispatch = useDispatch();\r\n\r\n\tuseEffect(() => {\r\n\t\tswitch (view.page) {\r\n\t\t\tcase 'home':\r\n\t\t\t\tsetContent(<Home />);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'team':\r\n\t\t\t\tsetContent(<Team team={view.data}/>);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'player':\r\n\t\t\t\tsetContent(<Player playerID={view.data}/>);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tsetContent(<Home />);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}, [view]);\r\n\r\n\tconst handleBack = () => dispatch(viewActions.backView());\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<BrowserView viewClassName='page'>\r\n\t\t\t\t<Row className='backButtonRow' gutter={[16, 16]}>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tview.page !== 'home' &&\r\n\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t<Button onClick={handleBack} type='primary' shape='round' icon={<LeftOutlined />}> Go Back</Button>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t}\r\n\t\t\t\t</Row>\r\n\t\t\t\t<Row className='content'>\r\n\t\t\t\t\t<Col span={24}>\r\n\t\t\t\t\t\t{content}\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t</BrowserView>\r\n\t\t\t<MobileView viewClassName='page-mobile'>\r\n\t\t\t\t<Row className='backButtonRow' gutter={[4,4]}>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tview.page !== 'home' &&\r\n\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t<Button onClick={handleBack} type='primary' shape='round' icon={<LeftOutlined />}> Go Back</Button>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t}\r\n\t\t\t\t</Row>\r\n\t\t\t\t<Row className='content-mobile'>\r\n\t\t\t\t\t<Col span={23}>\r\n\t\t\t\t\t\t{content}\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t</MobileView>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import * as actions from '../actions/viewActions';\r\n\r\nconst initialState = {\r\n    page: 'home',\r\n    data: {},\r\n    history: [\r\n        {\r\n            page: 'home',\r\n            data: {}\r\n        }\r\n    ],\r\n};\r\n\r\nconst viewReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actions.BACK_VIEW:\r\n            if (state.history.length > 1) {\r\n                state.history.pop();\r\n                return { ...state, page: state.history[state.history.length - 1].page, data: state.history[state.history.length - 1].data  };\r\n            } else {\r\n                return state;\r\n            }\r\n        case actions.CHANGE_VIEW:\r\n            return { ...state, page: action.payload.name, data: action.payload.data, history: [...state.history, { page: action.payload.name, data: action.payload.data }] }\r\n        case actions.FORWARD_VIEW:\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default viewReducer;","import { combineReducers } from 'redux';\r\n\r\nimport viewReducer from './viewReducer';\r\n\r\nconst rootReducers = combineReducers({\r\n    view: viewReducer\r\n});\r\n\r\nexport default rootReducers;","import { createStore } from 'redux';\r\nimport rootReducers from './reducers';\r\n\r\nconst store = createStore(rootReducers, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserView, MobileView } from 'react-device-detect';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport store from './configureStore';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserView viewClassName='landscape'>\r\n      <Provider store={store}>\r\n        <App />\r\n      </Provider>\r\n    </BrowserView>\r\n    <MobileView viewClassName='portrait'>\r\n      <Provider store={store}>\r\n        <App />\r\n      </Provider>\r\n    </MobileView>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}